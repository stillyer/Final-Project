[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "My name is Stewart Tillyer and I am a second year MCP student at UPenn. My area of focus in the program is urban design.\n\n\nI am very interested in how the built environment is designed. My academic and professional background is in architecture, but I have always been interested in larger scale design of cities and the many dynamic systems that all cooperate to make them function, which is why I returned to school to study urban planning and design.\n\n\nMy most recent interests have been in public transit design and transit oriented development. This interest developed this past summer while I was working in Dallas, Texas. My work primarily involved collaborating with Dallas Area Rapid Transit (DART), the public transit agency for the Dallas metropolitan region, on a variety of transit related projects. My involvement with DART this summer is what gave rise to this project.",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "analysis/4-folium.html",
    "href": "analysis/4-folium.html",
    "title": "Interactive Maps with Folium",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive maps produced using Folium."
  },
  {
    "objectID": "analysis/4-folium.html#finding-the-shortest-route",
    "href": "analysis/4-folium.html#finding-the-shortest-route",
    "title": "Interactive Maps with Folium",
    "section": "Finding the shortest route",
    "text": "Finding the shortest route\nThis example finds the shortest route between the Art Musuem and the Liberty Bell using osmnx.\n\nimport osmnx as ox\n\nFirst, identify the lat/lng coordinates for our places of interest. Use osmnx to download the geometries for the Libery Bell and Art Museum.\n\nphilly_tourism = ox.features_from_place(\"Philadelphia, PA\", tags={\"tourism\": True})\n\n\nart_museum = philly_tourism.query(\"name == 'Philadelphia Museum of Art'\").squeeze()\n\nart_museum.geometry\n\n\n\n\n\nliberty_bell = philly_tourism.query(\"name == 'Liberty Bell'\").squeeze()\n\nliberty_bell.geometry\n\n\n\n\nNow, extract the lat and lng coordinates\nFor the Art Museum geometry, we can use the .geometry.centroid attribute to calculate the centroid of the building footprint.\n\nliberty_bell_x = liberty_bell.geometry.x\nliberty_bell_y = liberty_bell.geometry.y\n\n\nart_museum_x = art_museum.geometry.centroid.x\nart_museum_y = art_museum.geometry.centroid.y\n\nNext, use osmnx to download the street graph around Center City.\n\nG_cc = ox.graph_from_address(\n    \"City Hall, Philadelphia, USA\", dist=1500, network_type=\"drive\"\n)\n\nNext, identify the nodes in the graph closest to our points of interest.\n\n# Get the origin node (Liberty Bell)\norig_node = ox.nearest_nodes(G_cc, liberty_bell_x, liberty_bell_y)\n\n# Get the destination node (Art Musuem)\ndest_node = ox.nearest_nodes(G_cc, art_museum_x, art_museum_y)\n\nFind the shortest path, based on the distance of the edges:\n\n# Get the shortest path --&gt; just a list of node IDs\nroute = ox.shortest_path(G_cc, orig_node, dest_node, weight=\"length\")\n\nHow about an interactive version?\nosmnx has a helper function ox.utils_graph.route_to_gdf() to convert a route to a GeoDataFrame of edges.\n\nox.utils_graph.route_to_gdf(G_cc, route, weight=\"length\").explore(\n    tiles=\"cartodb positron\",\n    color=\"red\",\n)\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/4-folium.html#examining-trash-related-311-requests",
    "href": "analysis/4-folium.html#examining-trash-related-311-requests",
    "title": "Interactive Maps with Folium",
    "section": "Examining Trash-Related 311 Requests",
    "text": "Examining Trash-Related 311 Requests\nFirst, let’s load the dataset from a CSV file and convert to a GeoDataFrame:\n\n\nCode\n# Load the data from a CSV file into a pandas DataFrame\ntrash_requests_df = pd.read_csv(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/trash_311_requests_2020.csv\"\n)\n\n# Remove rows with missing geometry\ntrash_requests_df = trash_requests_df.dropna(subset=[\"lat\", \"lon\"])\n\n\n# Create our GeoDataFrame with geometry column created from lon/lat\ntrash_requests = gpd.GeoDataFrame(\n    trash_requests_df,\n    geometry=gpd.points_from_xy(trash_requests_df[\"lon\"], trash_requests_df[\"lat\"]),\n    crs=\"EPSG:4326\",\n)\n\n\nLoad neighborhoods and do the spatial join to associate a neighborhood with each ticket:\n\n\nCode\n# Load the neighborhoods\nneighborhoods = gpd.read_file(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/zillow_neighborhoods.geojson\"\n)\n\n# Do the spatial join to add the \"ZillowName\" column\nrequests_with_hood = gpd.sjoin(\n    trash_requests,\n    neighborhoods.to_crs(trash_requests.crs),\n    predicate=\"within\",\n)\n\n\nLet’s explore the 311 requests in the Greenwich neighborhood of the city:\n\n# Extract out the point tickets for Greenwich\ngreenwich_tickets = requests_with_hood.query(\"ZillowName == 'Greenwich'\")\n\n\n# Get the neighborhood boundary for Greenwich\ngreenwich_geo = neighborhoods.query(\"ZillowName == 'Greenwich'\")\n\ngreenwich_geo.squeeze().geometry\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nQuarto has callout blocks that you can use to emphasize content in different ways. This is a “Note” callout block. More info is available on the Quarto documentation.\n\n\nImport the packages we need:\n\nimport folium\nimport xyzservices\n\nCombine the tickets as markers and the neighborhood boundary on the same Folium map:\n\n# Plot the neighborhood boundary\nm = greenwich_geo.explore(\n    style_kwds={\"weight\": 4, \"color\": \"black\", \"fillColor\": \"none\"},\n    name=\"Neighborhood boundary\",\n    tiles=xyzservices.providers.CartoDB.Voyager,\n)\n\n\n# Add the individual tickets as circle markers and style them\ngreenwich_tickets.explore(\n    m=m,  # Add to the existing map!\n    marker_kwds={\"radius\": 7, \"fill\": True, \"color\": \"crimson\"},\n    marker_type=\"circle_marker\", # or 'marker' or 'circle'\n    name=\"Tickets\",\n)\n\n# Hse folium to add layer control\nfolium.LayerControl().add_to(m)\n\nm  # show map\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/1-python-code-blocks.html",
    "href": "analysis/1-python-code-blocks.html",
    "title": "Python code blocks",
    "section": "",
    "text": "This is an example from the Quarto documentation that shows how to mix executable Python code blocks into a markdown file in a “Quarto markdown” .qmd file.\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "analysis/3-altair-hvplot.html",
    "href": "analysis/3-altair-hvplot.html",
    "title": "Altair and Hvplot Charts",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive charts produced using Altair and hvPlot."
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in Altair",
    "text": "Example: Measles Incidence in Altair\nFirst, let’s load the data for measles incidence in wide format:\n\n\nCode\nurl = \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/measles_incidence.csv\"\ndata = pd.read_csv(url, skiprows=2, na_values=\"-\")\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nWEEK\nALABAMA\nALASKA\nARIZONA\nARKANSAS\nCALIFORNIA\nCOLORADO\nCONNECTICUT\nDELAWARE\n...\nSOUTH DAKOTA\nTENNESSEE\nTEXAS\nUTAH\nVERMONT\nVIRGINIA\nWASHINGTON\nWEST VIRGINIA\nWISCONSIN\nWYOMING\n\n\n\n\n0\n1928\n1\n3.67\nNaN\n1.90\n4.11\n1.38\n8.38\n4.50\n8.58\n...\n5.69\n22.03\n1.18\n0.4\n0.28\nNaN\n14.83\n3.36\n1.54\n0.91\n\n\n1\n1928\n2\n6.25\nNaN\n6.40\n9.91\n1.80\n6.02\n9.00\n7.30\n...\n6.57\n16.96\n0.63\nNaN\n0.56\nNaN\n17.34\n4.19\n0.96\nNaN\n\n\n2\n1928\n3\n7.95\nNaN\n4.50\n11.15\n1.31\n2.86\n8.81\n15.88\n...\n2.04\n24.66\n0.62\n0.2\n1.12\nNaN\n15.67\n4.19\n4.79\n1.36\n\n\n3\n1928\n4\n12.58\nNaN\n1.90\n13.75\n1.87\n13.71\n10.40\n4.29\n...\n2.19\n18.86\n0.37\n0.2\n6.70\nNaN\n12.77\n4.66\n1.64\n3.64\n\n\n4\n1928\n5\n8.03\nNaN\n0.47\n20.79\n2.38\n5.13\n16.80\n5.58\n...\n3.94\n20.05\n1.57\n0.4\n6.70\nNaN\n18.83\n7.37\n2.91\n0.91\n\n\n\n\n5 rows × 53 columns\n\n\n\nThen, use the pandas.melt() function to convert it to tidy format:\n\n\nCode\nannual = data.drop(\"WEEK\", axis=1)\nmeasles = annual.groupby(\"YEAR\").sum().reset_index()\nmeasles = measles.melt(id_vars=\"YEAR\", var_name=\"state\", value_name=\"incidence\")\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nstate\nincidence\n\n\n\n\n0\n1928\nALABAMA\n334.99\n\n\n1\n1929\nALABAMA\n111.93\n\n\n2\n1930\nALABAMA\n157.00\n\n\n3\n1931\nALABAMA\n337.29\n\n\n4\n1932\nALABAMA\n10.21\n\n\n\n\n\n\n\nFinally, load altair:\n\nimport altair as alt\n\nAnd generate our final data viz:\n\n# use a custom color map\ncolormap = alt.Scale(\n    domain=[0, 100, 200, 300, 1000, 3000],\n    range=[\n        \"#F0F8FF\",\n        \"cornflowerblue\",\n        \"mediumseagreen\",\n        \"#FFEE00\",\n        \"darkorange\",\n        \"firebrick\",\n    ],\n    type=\"sqrt\",\n)\n\n# Vertical line for vaccination year\nthreshold = pd.DataFrame([{\"threshold\": 1963}])\n\n# plot YEAR vs state, colored by incidence\nchart = (\n    alt.Chart(measles)\n    .mark_rect()\n    .encode(\n        x=alt.X(\"YEAR:O\", axis=alt.Axis(title=None, ticks=False)),\n        y=alt.Y(\"state:N\", axis=alt.Axis(title=None, ticks=False)),\n        color=alt.Color(\"incidence:Q\", sort=\"ascending\", scale=colormap, legend=None),\n        tooltip=[\"state\", \"YEAR\", \"incidence\"],\n    )\n    .properties(width=650, height=500)\n)\n\nrule = alt.Chart(threshold).mark_rule(strokeWidth=4).encode(x=\"threshold:O\")\n\nout = chart + rule\nout"
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in hvplot",
    "text": "Example: Measles Incidence in hvplot\n\n\n\n\n\n\n\n\n\n\n\n\nGenerate the same data viz in hvplot:\n\n# Make the heatmap with hvplot\nheatmap = measles.hvplot.heatmap(\n    x=\"YEAR\",\n    y=\"state\",\n    C=\"incidence\", # color each square by the incidence\n    reduce_function=np.sum, # sum the incidence for each state/year\n    frame_height=450,\n    frame_width=600,\n    flip_yaxis=True,\n    rot=90,\n    colorbar=False,\n    cmap=\"viridis\",\n    xlabel=\"\",\n    ylabel=\"\",\n)\n\n# Some additional formatting using holoviews \n# For more info: http://holoviews.org/user_guide/Customizing_Plots.html\nheatmap = heatmap.redim(state=\"State\", YEAR=\"Year\")\nheatmap = heatmap.opts(fontsize={\"xticks\": 0, \"yticks\": 6}, toolbar=\"above\")\nheatmap"
  },
  {
    "objectID": "analysis/index.html",
    "href": "analysis/index.html",
    "title": "Analysis",
    "section": "",
    "text": "Analysis\nThis section includes examples of technical analysis done using Jupyter notebooks. Each sub-section highlights different types of analyses and visualizations. In particular, it highlights that we can easily publish interactive visualizations produced with packages such as hvPlot, altair, or Folium, without losing any of the interactive features.\nOn this page, you might want to share more introductory or background information about the analyses to help guide the reader.",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "analysis/2-static-images.html",
    "href": "analysis/2-static-images.html",
    "title": "Showing static visualizations",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and demonstrates how to generate static visualizations with matplotlib, pandas, and seaborn.\nStart by importing the packages we need:\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nLoad the “Palmer penguins” dataset from week 2:\n# Load data on Palmer penguins\npenguins = pd.read_csv(\"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/penguins.csv\")\n# Show the first ten rows\npenguins.head(n=10)    \n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190.0\n3650.0\nmale\n2007\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181.0\n3625.0\nfemale\n2007\n\n\n7\nAdelie\nTorgersen\n39.2\n19.6\n195.0\n4675.0\nmale\n2007\n\n\n8\nAdelie\nTorgersen\n34.1\n18.1\n193.0\n3475.0\nNaN\n2007\n\n\n9\nAdelie\nTorgersen\n42.0\n20.2\n190.0\n4250.0\nNaN\n2007"
  },
  {
    "objectID": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "href": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "title": "Showing static visualizations",
    "section": "A simple visualization, 3 different ways",
    "text": "A simple visualization, 3 different ways\n\nI want to scatter flipper length vs. bill length, colored by the penguin species\n\n\nUsing matplotlib\n\n# Setup a dict to hold colors for each species\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Initialize the figure \"fig\" and axes \"ax\"\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Group the data frame by species and loop over each group\n# NOTE: \"group\" will be the dataframe holding the data for \"species\"\nfor species, group_df in penguins.groupby(\"species\"):\n\n    # Plot flipper length vs bill length for this group\n    # Note: we are adding this plot to the existing \"ax\" object\n    ax.scatter(\n        group_df[\"flipper_length_mm\"],\n        group_df[\"bill_length_mm\"],\n        marker=\"o\",\n        label=species,\n        color=color_map[species],\n        alpha=0.75,\n        zorder=10\n    )\n\n# Plotting is done...format the axes!\n\n## Add a legend to the axes\nax.legend(loc=\"best\")\n\n## Add x-axis and y-axis labels\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\n\n## Add the grid of lines\nax.grid(True);\n\n\n\n\n\n\nHow about in pandas?\nDataFrames have a built-in “plot” function that can make all of the basic type of matplotlib plots!\nFirst, we need to add a new “color” column specifying the color to use for each species type.\nUse the pd.replace() function: it use a dict to replace values in a DataFrame column.\n\n# Calculate a list of colors\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Map species name to color \npenguins[\"color\"] = penguins[\"species\"].replace(color_map)\n\npenguins.head()\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\ncolor\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n#1f77b4\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n#1f77b4\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n#1f77b4\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n#1f77b4\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n#1f77b4\n\n\n\n\n\n\n\nNow plot!\n\n# Same as before: Start by initializing the figure and axes\nfig, myAxes = plt.subplots(figsize=(10, 6))\n\n# Scatter plot two columns, colored by third\n# Use the built-in pandas plot.scatter function\npenguins.plot.scatter(\n    x=\"flipper_length_mm\",\n    y=\"bill_length_mm\",\n    c=\"color\",\n    alpha=0.75,\n    ax=myAxes, # IMPORTANT: Make sure to plot on the axes object we created already!\n    zorder=10\n)\n\n# Format the axes finally\nmyAxes.set_xlabel(\"Flipper Length (mm)\")\nmyAxes.set_ylabel(\"Bill Length (mm)\")\nmyAxes.grid(True);\n\n\n\n\nNote: no easy way to get legend added to the plot in this case…\n\n\nSeaborn: statistical data visualization\nSeaborn is designed to plot two columns colored by a third column…\n\n# Initialize the figure and axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# style keywords as dict\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\nstyle = dict(palette=color_map, s=60, edgecolor=\"none\", alpha=0.75, zorder=10)\n\n# use the scatterplot() function\nsns.scatterplot(\n    x=\"flipper_length_mm\",  # the x column\n    y=\"bill_length_mm\",  # the y column\n    hue=\"species\",  # the third dimension (color)\n    data=penguins,  # pass in the data\n    ax=ax,  # plot on the axes object we made\n    **style  # add our style keywords\n)\n\n# Format with matplotlib commands\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\nax.grid(True)\nax.legend(loc=\"best\");"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MUSA550 Final Project",
    "section": "",
    "text": "The Dallas Area Rapid Transit (DART) system is the public transit agency for the greater Dallas metropolitan region. It provides, among others, light rail, bus, and shuttle service to four counties - Dallas, Tarrant, Collin, and Denton - and a number of cities in the Dallas region.\nThe Dallas region has historically, and continues to be, developed in a car-focused manner. The metropolitan region is sprawling with many suburban areas and large highways. However, while car travel is definitely the main method of transportation in the region, DART has shown an interest in supporting transit-oriented development (TOD) in the region around its stations.\nTransit-oriented development is development that supports the use of multimodal transportation methods with compact, walkable development and proximity to transit options including, but not limited to, rail, bus, bike, and trails. TOD has become a popular development method in recent decades and is supported in programs by many transit agencies around the country, including SEPTA here in Philadelphia. TOD offers residents better access to more sustainable transit methods and promotes a healthier environment by encouraging walking, biking, public transit use, and more generally a decreased reliance on personal vehicles.\nWhile DART has shown a desire to support TOD, their program is still early in its inception. This project will aim to offer some insight into which stations are most suitable for development based off of different population, development, ridership, and transit service indicators. A source of inspiration for the project was Delaware Valley Regional Planning Commission’s Evaluating TOD Opportunities webmap for the greater Philadelphia region, which similarly evaluates TOD opportunities at different stations according to specified metrics. The desired product of this study is a similarly interactive map that ranks DART lightrail stations based on TOD potential.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "MUSA550 Final Project",
    "section": "",
    "text": "We can create beautiful websites that describe complex technical analyses in Python using Quarto and deploy them online using GitHub Pages. This combination of tools is a really powerful way to create and share your work. This website is a demo that is meant to be used to create your own Quarto website for the final project in MUSA 550.\nQuarto is a relatively new tool, but is becoming popular quickly. It’s a successor to the Rmarkdown ecosystem that combines functionality into a single tool and also extends its computation power to other languages. Most importantly for us, Quarto supports executing Python code, allowing us to convert Jupyter notebooks to HTML and share them online.\n\n\n\n\n\n\nImportant\n\n\n\nThis template site, including the layout it uses, is just a suggested place to start! For your final project, you’re welcome (and encouraged) to make as many changes as you like to best fit your project.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "analysis/Ridership.html",
    "href": "analysis/Ridership.html",
    "title": "Ridership and Service Analysis",
    "section": "",
    "text": "Ridership and service are important considerations when determining what stations might have strong potential for transit-oriented development. Ridership gauges how many people use the station and may also suggest that they are coming from or using the areas that surround the station. Service - including how many different routes stop at a particular station - can help determine how much activity a station receives and how accessible a station is to riders.\nThe metrics that were used in this section include average weekday ridership at stations in 2023, the ridership change at stations between 2021-2023, and the average daily stops at each station. Ridership would measure the average amount of people using the station on a given weekday, the change in ridership measures if the station is becoming more or less frequently used, and the average daily stops - which accounts for all different services stopping at the station including light rail, bus, shuttle, etc - measures the amount of transit service provided at the station.\nRidership data was gathered from the DART Reference Book, which reports on different performance metrics of DART stations and the system as a whole. The station ridership totals are included as a table in the PDF document, so the data was preprocessed in excel first and made into a CSV to import into python for further use.\nService data was gathered from the General Transit Feed Specification (GTFS), which keeps real-time and static data on different metrics of transit systems around the world including up-to-date operating schedules, arrival and departure times, active routes, and active transit stops. To measure level of service, I decided to calculate how many times different transit routes stop at a station on a given day. To do this I combined different GTFS datasets that includes route information, stop information and location, and arrival and departure times. My focus is specifically on light rail stations, but I also wanted to capture any other services that stop and provide connections at these stations too. Since GTFS uses unique stop ID’s for every route (for example, a bus route that stops at a light rail station will have a different stop ID than the stop ID at the station for the light rail route) I created a small buffer around the light rail station stop and did a spatial join to capture all stops that were within the buffer, which I assume as being part of the same station network. GTFS data is captured in weeklong intervals, so once all the stops at each station were counted the total was divided by 7 to get the average daily stop total.\n\nAverage Weekday Ridership By Station\nAs might be expected, many of the stations with the highest ridership are located in central, urban locations, such as in downtown Dallas or in the downtowns of neighboring cities such as Plano. Other stations with high ridership often have a nearby anchor institution, such as a university or hospital, or are near denser residential areas that may have more people using the system to commute to work.\n\n\n\n\n\n\n\n\n\n\n\nRidership Change by Station 2021-2023\nRidership numbers have gone up at many of DART’s lightrail stations since 2021, with the exception of Burbank Station which had a decrease in ridership. Similar with ridership totals, the stations that saw the biggest increase in ridership over the past two years were often located in central locations or closely linked to significant institutions. The increase could be a return to pre-pandemic activity as we get farther away from the pandemic, but still suggests an overall increase in activity around downtown and landmark locations.\n\n\n\n\n\n\n\n\n\n\n\nAverage Daily Stops by Station\nThe stations with the most service and daily stops are again oftentimes located in central locations. Many of these stations are connected to multiple, and sometimes all four, of the system’s light rail lines as well as connecting bus routes and shuttle service. However, some stations seem to receive more service than their ridership numbers might warrant. For example, Downtown Garland receives a good amount of service, but low ridership compared to many of the other stations in the system. This seems to be a trend for a good amount of stations outside of the main urban centers, but might suggest the potential for future development around these stations since the system could be able to support an increase in riders.\n\n\n\n\n\n\n\n\n\n\n\nDART Stations Ranked for TOD Potential Based on Ridership Metrics\nTo create a ranking of stations for TOD Potential based on ridership metrics, I gave a weighted score to each of the stations based on the three metrics above. I used the MinMaxScaler to normalize each of the three values across the stations and then provided a ‘weight’ to each of the variables based on how I prioritized the metrics. I decided that the current ridership totals were most important as they best reflect current use of the stations. Ridership change and daily stops were weighted the same. They could be good predictors of future use at the stations and what stations could support an increase in ridership, but are more predictive and less concrete than current ridership.\nThe final interactive map was made using folium and uses graduated colors to distinguish ranking of the stations with the lightest colors being the lowest rank and darkest colors being the highest. Clicking on each of the station symbols opens a pop up that gives an overview of the ridership metrics and the ranking of the station. The light rail routes shape file, which was retrieved from the City of Dallas Open Data Portal, was underlayed on the map to provide more context for the station symbols.\nThe map highlights that many of the stations with highest TOD potential based on ridership metrics are located in central areas. A good amount of these stations are in downtown Dallas, but some are also in neighboring cities such as Plano and Garland or at the ends of the routes.\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook",
    "crumbs": [
      "Analysis",
      "Ridership and Service Analysis"
    ]
  },
  {
    "objectID": "analysis/FinalMap.html",
    "href": "analysis/FinalMap.html",
    "title": "DART Station TOD Potential",
    "section": "",
    "text": "The creation of the final station ranking and map followed most of the same processes as the ridership and population/development rankings and maps. First, the ridership and population/development dataframes were merged to create a final dataframe with all of the metrics included for each station. Next, MinMaxScaler was used on each of the different metrics to normalize the values and then weight each of the stations. For the final weighting of variables, current population of station areas and current ridership were weighted highest as they provide the most accurate current picture of the station areas and station usage. Average daily stops and population change from 2021 to 2023 were weighted the same and thouhgt of as being good indicators for future potentials at stations based on activity in station area and ability for stations to support increased ridership. New homes built between 2021 to 2023, while still an important metric to consider, was weighted the lowest of the metrics because of the current low focus on transit-adjacent development in the region, which meant that many of the station areas had seen no new residential development during the timeframe being analyzed.\nThe final rankings map shows that there is TOD potential around the region. While a good amount of the high-ranking stations are located in downtown Dallas, there are also high ranking stations in other cities and in between cities as well. Some of these high ranking stations are closely linked with institutions such as universities or hospitals.\nThe dispersion of high-ranking stations also suggests that TOD development could happen in different forms. For example, downtown Dallas is already highly developed, and while more development can occur what might be as if not more beneficial is infrastructure development to allow the stations to become more accessible to more people. This could take the form of complete streets implementation or new public facilities near stations, among others. In areas farther from dense areas development could take the form of more traditional residential and commercial development. For stations that are linked to other institutions, more tailored forms of development might be required that compliment the existing uses in the area.\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\nCurrent Shortcomings and Further Analysis\nWhile the current model considers a good amount of metrics in determining TOD potential at DART stations, the analysis is based primarily on current conditions and trends from the immediate past. The model might be strengthened by considering more historical trends, which could paint a longer term picture of the station areas and also help to complete predictive modeling for certain trends such as development and station usage that could better guide where TOD development is prioritized. Predictive modeling was explored with the current data, but it was determined the conclusions would likely not be too reliable due to extent of the data being analyzed. It was challenging to find more historic data for some of the metrics being analyzed, such as new home construction and ridership totals, which is why the datasets were limited to just recent years.\nOther metrics for further analysis could includ economic data and land use data. Economic data could help measure job creation and identify job centers, which is an important consideration when planning transit. I explored using OnTheMap data to perform economic analysis, but economic data is hard to find and sometimes missing for census tracts and census block groups in this region, which made it hard to perform analysis, but is still worth a deeper dive into to help improve the diversity of the model. Similarly, Dallas’ current land use maps are outdated and other areas in the region are even more so. Accurate land use analysis would likely require coordinated survey work to create accurate up to date land use maps or using multiple data sources such as OpenStreetMap and sattelite data as a workaround, but would still be useful analysis for determing metrics such as vacant and developable land around stations.\n\n\nConclusion\nSupporting transit-oriented development in the Dallas region could help grow the DART system and promote sustainable methods of travel instead of driving. While Dallas is still a car-reliant region, the current transit system does connect a good amount of important locations in the region. The current findings show that there is TOD potential around the region along transit routes and in areas with different built conditions, which means that development could happen in a variety of different ways and create unique and varied, yet connected communities.",
    "crumbs": [
      "Analysis",
      "DART Station TOD Potential"
    ]
  },
  {
    "objectID": "analysis/StationDevelopment.html",
    "href": "analysis/StationDevelopment.html",
    "title": "Population and Development Analysis",
    "section": "",
    "text": "Population and development information is important to consider when judging the TOD potential at stations. Populations support the stations and development can help suggest what areas will grow in population, which can predict what stations will get more use in the future.\nThe metrics used in this section are population in the areas surrounding stations in 2023, population increase around stations from 2021-2023, and new homes built around stations from 2021-2023. The ‘station area’ that was used for analysis was a half-mile radius around the station, which is a common area of use when studying TOD potential because it is an area where the station is accessible and walkable to from any area within.\nData for this section was gathered from querying the census API for relevant variables. The DART system covers four counties in the Dallas-Fort Worth metro area - Dallas, Tarrant, Collin, and Denton counties - so data was collected for all four counties. The surveys used for the data were ACS 2021, 2022, and 2023. Data was gathered at the block group level to allow data to be aggregated at a small-scale level that was needed for the station study areas.\nTo get data for the study areas, a half mile buffer geometry was created around each of the stations. A spatial join was then performed between the buffers and the census block group geometries and the data tied to the census block groups was aggregated by the buffer overlaps.\n\nPopulation Around Stations\nMany of the stations have a sizeable population within a half mile, and this not just at the stations in central, dense areas. There are a good amount of station areas outside of Dallas that have a good sized population, which suggests that there might be TOD opportunities at a good amount of the DART light rail stations based on population metrics.\n\n\n\n\n\n\n\n\n\n\n\nPopulation Change Around Stations 2021-2023\nPopulation change can be a good predictor about what areas might be growing and where TOD focus should be. A good amount of the station areas saw an increase in population between 2021 and 2023. The station areas that increased in population were dispersed across the region rather than being concentrated in specific areas. This is also true of the areas that saw a decrease in population.\n\n\n\n\n\n\n\n\n\n\n\nNew Homes Built Around Stations 2021-2023\nNew homes built from 2021-2023 was more concentrated in certain areas than where population increase occurred during the same time. Most of the areas that saw new home development are in centrally located neighborhoods. The reason for lack of development around many of the stations could be due to the car-centric development pattern that is still prevalent in the Dallas area. While DART is looking to promote TOD development in the region, driving is still definitely the primary means of transportation for most people in the region and as such development is not tied to or being focused around transit hubs currently.\n\n\n\n\n\n\n\n\n\n\n\nDART Stations Ranked for TOD Potential Based on Population and Development Metrics\nTo create a ranking of stations for TOD potential based on population and development metrics, I gave a weighted score to each of the stations based on the three metrics above. Same as with the ridership metrics, I used the MinMaxScaler to normalize each of the three values across the stations and then provided a ‘weight’ to each of the variables based on how I prioritized the metrics. For this section, I decided that the current population in the surrounding station areas was the most important metric as it best reflects current conditions around the stations. For this sections, population change and new homes development can act as the predictors for future activity in the station areas. They are still important metrics, but more predictive and less indicative of current conditions. For this section, I also decided to weight population change a bit higher than new homes developed because it does not seem that development around transit hubs seems to be a big focus in the region at this time.\nThe final interactive map was made using folium and uses graduated colors to distinguish ranking of the stations with the lightest colors being the lowest rank and darkest colors being the highest. Clicking on each of the station symbols opens a pop up that gives an overview of the population and development metrics and the ranking of the station. The light rail routes shape file, which was retrieved from the City of Dallas Open Data Portal, was underlayed on the map to provide more context for the station symbols.\nSimilar to the ridership metrics map, a good amount of the stations with highest TOD potential based on population and development metrics are located in central areas, especially in downtown Dallas. However, maybe a bit moreso than with the ridership metrics, there seem to be more stations farther out from downtown Dallas with higher rankings, which suggests that there is more TOD potential at stations regionally based on these metrics.\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook",
    "crumbs": [
      "Analysis",
      "Population and Development Analysis"
    ]
  },
  {
    "objectID": "analysis/Ridership.html#average-weekday-ridership-by-station",
    "href": "analysis/Ridership.html#average-weekday-ridership-by-station",
    "title": "Ridership and Service Analysis",
    "section": "Average Weekday Ridership By Station",
    "text": "Average Weekday Ridership By Station\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook",
    "crumbs": [
      "Analysis",
      "Ridership and Service Analysis"
    ]
  },
  {
    "objectID": "index.html#premise",
    "href": "index.html#premise",
    "title": "MUSA550 Final Project",
    "section": "",
    "text": "The Dallas Area Rapid Transit (DART) system is the public transit agency for the greater Dallas metropolitan region. It provides, among others, light rail, bus, and shuttle service to four counties - Dallas, Tarrant, Collin, and Denton - and a number of cities in the Dallas region.\nThe Dallas region has historically, and continues to be, developed in a car-focused manner. The metropolitan region is sprawling with many suburban areas and large highways. However, while car travel is definitely the main method of transportation in the region, DART has shown an interest in supporting transit-oriented development (TOD) in the region around its stations.\nTransit-oriented development is development that supports the use of multimodal transportation methods with compact, walkable development and proximity to transit options including, but not limited to, rail, bus, bike, and trails. TOD has become a popular development method in recent decades and is supported in programs by many transit agencies around the country, including SEPTA here in Philadelphia. TOD offers residents better access to more sustainable transit methods and promotes a healthier environment by encouraging walking, biking, public transit use, and more generally a decreased reliance on personal vehicles.\nWhile DART has shown a desire to support TOD, their program is still early in its inception. This project will aim to offer some insight into which stations are most suitable for development based off of different population, development, ridership, and transit service indicators. A source of inspiration for the project was Delaware Valley Regional Planning Commission’s Evaluating TOD Opportunities webmap for the greater Philadelphia region, which similarly evaluates TOD opportunities at different stations according to specified metrics. The desired product of this study is a similarly interactive map that ranks DART lightrail stations based on TOD potential.",
    "crumbs": [
      "Overview"
    ]
  }
]